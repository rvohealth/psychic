/* eslint-disable @typescript-eslint/no-unsafe-member-access */
/* eslint-disable @typescript-eslint/no-unsafe-argument */
import { OpenapiSchemaBodyShorthand, OpenapiShorthandPrimitiveTypes } from '@rvoh/dream/openapi'
import { DreamModelSerializerType, SimpleObjectSerializerType } from '@rvoh/dream/types'

import { DreamApp } from '@rvoh/dream'
import isObject from '../../helpers/isObject.js'

/**
 * @internal
 *
 * Recursively scans an OpenAPI schema structure and returns an array of all Serializers referenced within it.
 *
 * This function traverses the provided OpenAPI schema definition looking for `$serializer` properties
 * and collects all unique serializer references found. It performs a deep scan of nested objects and
 * arrays to find all serializer references at any level of nesting.
 *
 * **Important**: This function does _not_ recurse into the OpenAPI schemas generated by the discovered
 * Serializers themselves. It only extracts serializers from the hand-written OpenAPI structure provided
 * as input.
 *
 * @param openapi - The OpenAPI schema definition to scan for serializer references
 * @returns An array of unique serializers found in the schema structure
 *
 * @example
 * ```typescript
 * const schema = {
 *   type: 'object',
 *   properties: {
 *     user: { $serializer: UserSerializer },
 *     posts: {
 *       type: 'array',
 *       items: { $serializer: PostSerializer }
 *     },
 *     metadata: {
 *       type: 'object',
 *       properties: {
 *         author: { $serializer: UserSerializer } // Duplicate, will be deduplicated
 *       }
 *     }
 *   }
 * }
 *
 * const serializers = allSerializersFromHandWrittenOpenapi(schema)
 * // Returns: [UserSerializer, PostSerializer]
 * ```
 */
export default function allSerializersFromHandWrittenOpenapi(
  openapi: OpenapiSchemaBodyShorthand | OpenapiShorthandPrimitiveTypes | undefined,
): (DreamModelSerializerType | SimpleObjectSerializerType)[] {
  const serializers = new Set<DreamModelSerializerType | SimpleObjectSerializerType>()

  extractSerializers(openapi, serializers)

  return [...serializers]
}

function extractSerializers(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  value: any,
  serializers: Set<DreamModelSerializerType | SimpleObjectSerializerType>,
) {
  if (!value) return

  if (value.$serializer) {
    serializers.add(value.$serializer)
    //
  } else if (value.$serializable) {
    const foundSerializers = DreamApp.system.inferSerializersFromDreamClassOrViewModelClass(
      value.$serializable,
      value.$serializableSerializerKey,
    )

    foundSerializers.forEach(serializer => serializers.add(serializer))

    //
  } else if (isObject(value)) {
    // Recurse into objects
    Object.values(value).forEach(val => extractSerializers(val, serializers))
    //
  } else if (Array.isArray(value)) {
    // Recurse into arrays
    value.forEach(val => extractSerializers(val, serializers))
  }
}
