import { DateTime } from 'luxon'
import {
  PetTreatsEnumValues,
  SpeciesTypesEnumValues,
  Int8,
  Json,
  Numeric,
  PetTreatsEnum,
  SpeciesTypesEnum,
  IdType,
  Timestamp
} from './sync'

export const schema = {
  health_users: {
    columns: {
      createdAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      email: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: true,
        isArray: false,
      },
      id: {
        coercedType: {} as number,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: false,
        isArray: false,
      },
      name: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: true,
        isArray: false,
      },
      passwordDigest: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: true,
        isArray: false,
      },
      updatedAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
    },
    virtualColumns: [],
    associations: {
      
    },
  },
  pets: {
    columns: {
      collarCount: {
        coercedType: {} as IdType | null,
        enumType: null,
        enumValues: null,
        dbType: 'bigint',
        allowNull: true,
        isArray: false,
      },
      collarCountInt: {
        coercedType: {} as number | null,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: true,
        isArray: false,
      },
      collarCountNumeric: {
        coercedType: {} as number | null,
        enumType: null,
        enumValues: null,
        dbType: 'numeric',
        allowNull: true,
        isArray: false,
      },
      createdAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      favoriteTreats: {
        coercedType: {} as PetTreatsEnum[] | null,
        enumType: {} as PetTreatsEnum,
        enumValues: PetTreatsEnumValues,
        dbType: 'pet_treats_enum[]',
        allowNull: true,
        isArray: true,
      },
      id: {
        coercedType: {} as IdType,
        enumType: null,
        enumValues: null,
        dbType: 'bigint',
        allowNull: false,
        isArray: false,
      },
      lastHeardAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      lastSeenAt: {
        coercedType: {} as DateTime | null,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: true,
        isArray: false,
      },
      likesTreats: {
        coercedType: {} as boolean,
        enumType: null,
        enumValues: null,
        dbType: 'boolean',
        allowNull: false,
        isArray: false,
      },
      likesWalks: {
        coercedType: {} as boolean | null,
        enumType: null,
        enumValues: null,
        dbType: 'boolean',
        allowNull: true,
        isArray: false,
      },
      name: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: true,
        isArray: false,
      },
      requiredCollarCount: {
        coercedType: {} as IdType,
        enumType: null,
        enumValues: null,
        dbType: 'bigint',
        allowNull: false,
        isArray: false,
      },
      requiredCollarCountInt: {
        coercedType: {} as number,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: false,
        isArray: false,
      },
      requiredCollarCountNumeric: {
        coercedType: {} as number,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: false,
        isArray: false,
      },
      species: {
        coercedType: {} as SpeciesTypesEnum | null,
        enumType: {} as SpeciesTypesEnum,
        enumValues: SpeciesTypesEnumValues,
        dbType: 'species_types_enum',
        allowNull: true,
        isArray: false,
      },
      updatedAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      userId: {
        coercedType: {} as number,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: false,
        isArray: false,
      },
    },
    virtualColumns: [],
    associations: {
      user: {
        type: 'BelongsTo',
        foreignKey: 'userId',
        tables: ['users'],
        optional: false,
      },
    },
  },
  users: {
    columns: {
      bio: {
        coercedType: {} as string,
        enumType: null,
        enumValues: null,
        dbType: 'text',
        allowNull: false,
        isArray: false,
      },
      birthdate: {
        coercedType: {} as DateTime | null,
        enumType: null,
        enumValues: null,
        dbType: 'date',
        allowNull: true,
        isArray: false,
      },
      createdAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      createdOn: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'date',
        allowNull: false,
        isArray: false,
      },
      email: {
        coercedType: {} as string,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: false,
        isArray: false,
      },
      favoriteBigints: {
        coercedType: {} as Int8[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'bigint[]',
        allowNull: true,
        isArray: true,
      },
      favoriteBooleans: {
        coercedType: {} as boolean[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'boolean[]',
        allowNull: true,
        isArray: true,
      },
      favoriteCitext: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'citext',
        allowNull: true,
        isArray: false,
      },
      favoriteCitexts: {
        coercedType: {} as string[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'citext[]',
        allowNull: true,
        isArray: true,
      },
      favoriteDates: {
        coercedType: {} as Timestamp[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'date[]',
        allowNull: true,
        isArray: true,
      },
      favoriteDatetimes: {
        coercedType: {} as Timestamp[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone[]',
        allowNull: true,
        isArray: true,
      },
      favoriteIntegers: {
        coercedType: {} as number[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'integer[]',
        allowNull: true,
        isArray: true,
      },
      favoriteJsonbs: {
        coercedType: {} as Json[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'jsonb[]',
        allowNull: true,
        isArray: true,
      },
      favoriteJsons: {
        coercedType: {} as Json[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'json[]',
        allowNull: true,
        isArray: true,
      },
      favoriteNumerics: {
        coercedType: {} as Numeric[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'numeric[]',
        allowNull: true,
        isArray: true,
      },
      favoriteTexts: {
        coercedType: {} as string[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'text[]',
        allowNull: true,
        isArray: true,
      },
      favoriteUuids: {
        coercedType: {} as string[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'uuid[]',
        allowNull: true,
        isArray: true,
      },
      id: {
        coercedType: {} as number,
        enumType: null,
        enumValues: null,
        dbType: 'integer',
        allowNull: false,
        isArray: false,
      },
      jsonData: {
        coercedType: {} as Json | null,
        enumType: null,
        enumValues: null,
        dbType: 'json',
        allowNull: true,
        isArray: false,
      },
      jsonbData: {
        coercedType: {} as Json | null,
        enumType: null,
        enumValues: null,
        dbType: 'jsonb',
        allowNull: true,
        isArray: false,
      },
      name: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: true,
        isArray: false,
      },
      nicknames: {
        coercedType: {} as string[] | null,
        enumType: null,
        enumValues: null,
        dbType: 'character varying[]',
        allowNull: true,
        isArray: true,
      },
      notes: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'text',
        allowNull: true,
        isArray: false,
      },
      optionalUuid: {
        coercedType: {} as string | null,
        enumType: null,
        enumValues: null,
        dbType: 'uuid',
        allowNull: true,
        isArray: false,
      },
      passwordDigest: {
        coercedType: {} as string,
        enumType: null,
        enumValues: null,
        dbType: 'character varying',
        allowNull: false,
        isArray: false,
      },
      requiredFavoriteBigints: {
        coercedType: {} as Int8[],
        enumType: null,
        enumValues: null,
        dbType: 'bigint[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteBooleans: {
        coercedType: {} as boolean[],
        enumType: null,
        enumValues: null,
        dbType: 'boolean[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteCitext: {
        coercedType: {} as string,
        enumType: null,
        enumValues: null,
        dbType: 'citext',
        allowNull: false,
        isArray: false,
      },
      requiredFavoriteCitexts: {
        coercedType: {} as string[],
        enumType: null,
        enumValues: null,
        dbType: 'citext[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteDates: {
        coercedType: {} as Timestamp[],
        enumType: null,
        enumValues: null,
        dbType: 'date[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteDatetimes: {
        coercedType: {} as Timestamp[],
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteIntegers: {
        coercedType: {} as number[],
        enumType: null,
        enumValues: null,
        dbType: 'integer[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteJsonbs: {
        coercedType: {} as Json[],
        enumType: null,
        enumValues: null,
        dbType: 'jsonb[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteJsons: {
        coercedType: {} as Json[],
        enumType: null,
        enumValues: null,
        dbType: 'json[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteNumerics: {
        coercedType: {} as Numeric[],
        enumType: null,
        enumValues: null,
        dbType: 'numeric[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteTexts: {
        coercedType: {} as string[],
        enumType: null,
        enumValues: null,
        dbType: 'text[]',
        allowNull: false,
        isArray: true,
      },
      requiredFavoriteUuids: {
        coercedType: {} as string[],
        enumType: null,
        enumValues: null,
        dbType: 'uuid[]',
        allowNull: false,
        isArray: true,
      },
      requiredJsonData: {
        coercedType: {} as Json,
        enumType: null,
        enumValues: null,
        dbType: 'json',
        allowNull: false,
        isArray: false,
      },
      requiredJsonbData: {
        coercedType: {} as Json,
        enumType: null,
        enumValues: null,
        dbType: 'jsonb',
        allowNull: false,
        isArray: false,
      },
      requiredNicknames: {
        coercedType: {} as string[],
        enumType: null,
        enumValues: null,
        dbType: 'character varying[]',
        allowNull: false,
        isArray: true,
      },
      updatedAt: {
        coercedType: {} as DateTime,
        enumType: null,
        enumValues: null,
        dbType: 'timestamp without time zone',
        allowNull: false,
        isArray: false,
      },
      uuid: {
        coercedType: {} as string,
        enumType: null,
        enumValues: null,
        dbType: 'uuid',
        allowNull: false,
        isArray: false,
      },
    },
    virtualColumns: ['password'],
    associations: {
      pets: {
        type: 'HasMany',
        foreignKey: 'userId',
        tables: ['pets'],
        optional: null,
      },
    },
  },
} as const
