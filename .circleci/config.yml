version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/orb-intro/
orbs:
  aws-cli: circleci/aws-cli@3.1.1
  node: circleci/node@5.1.0
  browser-tools: circleci/browser-tools@1.4.4
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.3.0

jobs:
  uspecs:
    docker:
      - image: cimg/redis:6.2.6
      - image: cimg/postgres:13.9
        environment: # add POSTGRES environment variables.
          POSTGRES_USER: psychic
          POSTGRES_DB: psychic_core_test
          POSTGRES_PASSWORD: ''
    environment:
      NODE_ENV: test
      PORT: 7778
      CHROME_PATH: /usr/bin/google-chrome
      DB_USER: psychic
      DB_PORT: 5432
      PRIMARY_DB_NAME: psychic_core_test
      PRIMARY_DB_HOST: localhost
      TZ: UTC

    steps:
      - checkout
      - node/install:
          install-yarn: true
          node-version: '18.15.0'
      - run:
          name: Update npmrc with node-beam creds
          command: |
            echo @rvohealth:registry=https://npm.pkg.github.com > ~/.npmrc
            echo //npm.pkg.github.com/:_authToken=$GITHUB_OAUTH_TOKEN >> ~/.npmrc
      - node/install-packages:
          pkg-manager: yarn
          app-dir: ~/project
          cache-version: v7
      - run: sudo apt-get update

      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: 'Wait for DB'
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: 'Wait for Redis'
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: 'Database migrate'
          command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn psycore db:migrate
      - run:
          name: 'Run unit specs'
          command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn uspec

  # fspecs:
  #   docker:
  #     - image: cimg/node:18.15.0-browsers
  #     - image: cimg/redis:6.2.6
  #     - image: cimg/postgres:13.9
  #       environment: # add POSTGRES environment variables.
  #         POSTGRES_USER: psychic
  #         POSTGRES_DB: psychic_core_test
  #         POSTGRES_PASSWORD: ''
  #   environment:
  #     NODE_ENV: test
  #     PORT: 7778
  #     CHROME_PATH: /usr/bin/google-chrome
  #     DB_USER: psychic
  #     DB_PORT: 5432
  #     PRIMARY_DB_NAME: psychic_core_test
  #     PRIMARY_DB_HOST: localhost
  #     TZ: UTC

  #   steps:
  #     - checkout
  #     - node/install:
  #         install-yarn: true
  #         node-version: '18.15.0'
  #     - run:
  #         name: Update npmrc with node-beam creds
  #         command: |
  #           echo @rvohealth:registry=https://npm.pkg.github.com > ~/.npmrc
  #           echo //npm.pkg.github.com/:_authToken=$GITHUB_OAUTH_TOKEN >> ~/.npmrc
  #     - run: sudo apt-get update
  #     - browser-tools/install-chrome:
  #         chrome-version: 116.0.5845.96 # TODO: remove until: https://github.com/CircleCI-Public/browser-tools-orb/issues/75
  #         replace-existing: true # TODO: remove until: https://github.com/CircleCI-Public/browser-tools-orb/issues/75

  #     - browser-tools/install-chromedriver
  #     - run:
  #         name: 'Check install'
  #         command: |
  #           google-chrome --version
  #           chromedriver --version

  #     - node/install-packages:
  #         pkg-manager: yarn
  #         app-dir: ~/project
  #         cache-version: v7
  #         check-cache: never # TODO: remove when CircleCI fixes the 'permission denied' issue that causes these to take 35 minutes to run
  #         with-cache: false # TODO: remove when CircleCI fixes the 'permission denied' issue that causes these to take 35 minutes to run

  #     # Here we make sure that the secondary container boots
  #     # up before we run operations on the database.
  #     - run:
  #         name: 'Wait for DB'
  #         command: dockerize -wait tcp://localhost:5432 -timeout 1m
  #     - run:
  #         name: 'Wait for Redis'
  #         command: dockerize -wait tcp://localhost:6379 -timeout 1m
  #     - run:
  #         name: 'Database migrate'
  #         command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn psycore db:migrate

  #     - run: mkdir -p /tmp/screenshots
  #     - run:
  #         name: 'Run feature specs'
  #         command: cd ~/project && APP_ROOT_PATH=$(pwd) yarn fspec
  #     - store_artifacts:
  #         path: /tmp/screenshots

workflows:
  test:
    jobs:
      - uspecs:
          context: github-packages
      # - fspecs:
      #     context: github-packages
